- name: Reload Nginx
  systemd:
    name: nginx
    state: reloaded
    daemon_reload: true

- name: Restart Gunicorn
  systemd:
    name: gunicorn
    state: restarted
    daemon_reload: true

- name: Migrate Django database
  shell:
    cmd: "source /srv/tournesol-backend/venv/bin/activate && SETTINGS_FILE=/etc/tournesol/settings.yaml python /srv/tournesol-backend/manage.py migrate"
    executable: /usr/bin/bash
  become: true
  become_user: gunicorn

- name: Collect Django static assets
  shell:
    cmd: "source /srv/tournesol-backend/venv/bin/activate && SETTINGS_FILE=/etc/tournesol/settings.yaml python /srv/tournesol-backend/manage.py collectstatic --noinput"
    executable: /usr/bin/bash
  become: true
  become_user: gunicorn

- name: Write Swagger UI OAuth client ID into root's home
  shell: "echo \"{{swagger_ui_oauth2_client_id}}\" > /root/swagger_ui_oauth2_client_id && chmod go-rwx /root/swagger_ui_oauth2_client_id"

- name: Write Swagger UI OAuth client secret into root's home
  shell: "echo \"{{swagger_ui_oauth2_client_secret}}\" > /root/swagger_ui_oauth2_client_secret && chmod go-rwx /root/swagger_ui_oauth2_client_secret"

- name: Create Swagger UI OAuth application in Django database
  shell: 
    cmd: now=$(date -I) && psql -d tournesol <<< "insert into oauth2_provider_application (client_id, redirect_uris, client_type, authorization_grant_type, client_secret, name, skip_authorization, algorithm, created, updated) values ('{{swagger_ui_oauth2_client_id}}', '{{api_scheme}}://{{api_domain_name}}/docs/', 'confidential', 'password', '{{swagger_ui_oauth2_client_secret}}','Swagger UI', true, 'RS256', '$now', '$now');"
    executable: /usr/bin/bash
  become: yes
  become_user: postgres
